#include <stdio.h>
#include <stdlib.h>
#include <errno.h>
#include <errno.h>
#include <getopt.h>

typedef struct {
    int optind;
} ParsedArgs;

void usage(const char* progname, FILE* stream)
{
    fprintf(stream, "Usage: %s [OPTION]...\n"
        "\t-h, --help\tdisplay this help message\n"
        "\t-n\t\tnumber of threads to use\n", progname);
}


ParsedArgs parse_args(int argc, char* argv[])
{
    ParsedArgs parsed_args;
    int c, option_index = 0;

    static struct option longopts[] = {
        {"help", no_argument, NULL, 'h'},
    /*
        {"foo-opt", required_argument, NULL, 'f'},
        {"bar-opt", optional_argument, &check_optarg, 12345},
    */
        {NULL, 0, NULL, 0}
    };

    while((c = getopt_long(argc, argv, "hf=", longopts, &option_index)) != -1) {
        switch(c) {
            case 'h':
                usage(argv[0], stdout);
                exit(EXIT_SUCCESS);
         /*
            case 'f':
                {
                    const char* argval = optarg;
                    puts(argval);
                }
                break;
            case 0:
                if (check_optarg == 12345) {
                    printf("argument provided: %s\n", optarg);
                }
                break;
         */
            case ':':
                fputs("missing argument", stderr);
            default:
                usage(argv[0], stderr);
                exit(EXIT_FAILURE);
        }
    }
    parsed_args.optind = optind;

    return parsed_args;
}

int main(int argc, char *argv[])
{
    ParsedArgs parsed_args = parse_args(argc, argv);
    argc -= optind;
    argv += optind;
    return 0;
}
