[user]
    email = randprefix.github@fastmail.com
    name = Julien Rabinow
    signingkey = 0BEF65B5CE49D21E72CAAA8FECA72D7635A93214
[core]
    longpaths = true
    pager = less -isXF
[init]
	defaultBranch = main
[push]
    default = current
[pull]
	rebase = false
[merge]
    tool = vimdiff
[diff]
    tool = vimdiff
[credential]
    helper = store --file ~/.local/share/git/credstore
    helper = cache --timeout=7200
[color]
  ui = auto
  diff = auto
  status = auto
  branch = auto
  interactive = auto
[color "diff"]
  whitespace = red reverse
[rerere]
  enabled = true
[sendemail]
  chainreplyto = no
[filter "lfs"]
    clean = git-lfs clean -- %f
    smudge = git-lfs smudge -- %f
    process = git-lfs filter-process
    required = true
[alias]
  st = status
  co = checkout
  ci = commit
  br = branch
  cob = checkout -b
  diff = "diff -w --word-diff --color-moved"
  show = "show -w --word-diff"
  # push to non-existent upstream branch
  fpush = "!branch=$(git rev-parse --abbrev-ref HEAD); remote=origin; git branch -u \"${remote}\" \"${branch}\"; git push -u \"${remote}\" \"${branch}\""
  # delete branch at remote
  delbr = "!git push origin -d "
  # pretty logging 1
  lg1 = log --graph --abbrev-commit --decorate --date=relative --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)' --all
  # pretty logging 2
  lg2 = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n''          %C(white)%s%C(reset) %C(dim white)- %an%C(reset)' --all
  lg = !"git lg2"
  # show log of filechanges
  filelog = log --graph --all --decorate --stat --date=iso
  # list of commit hash+message in reverse order
  recap = "!git log --all --oneline --no-merges --author=$(git config user.email)"
  changelog = "!git log --oneline --no-merges $(git tag --sort=creatordate|tail -1)..HEAD"
  # show remote url
  url = config --get remote.origin.url
  # commit everything yolo mode with accompanying commit message
  yolo = !git commit -am \"$(curl -s http://whatthecommit.com/index.txt)\"
  # keeping the below around till i find a good use for it
  stag = "!id=`git rev-parse --verify HEAD`; git tag tag_for_${id:0:8} -m \"Tag for commit $id\""
  vtag = !git tag -v `git describe`
  # print last commit message
  commitmsg = "log -n1 --pretty=format:%B"
  # who committed the most to this repo
  leaderboard = "shortlog -sn --all --no-merges"
  # which branch was updated most recently
  recent = "for-each-ref --count=10 --sort=-committerdate refs/heads/ --format=\"%(refname:short)\""
  # Show the commits and content in this branch
  unpushed = "!git log --oneline \"origin/$(git rev-parse --abbrev-ref HEAD)\".."
  # hide a branch for later
  hide = "!f() { git update-ref refs/hidden/$1 $1 && git br -D $1; }; f"
  unhide = "!f() { git br $1 && git update-ref $1 refs/hidden/$1; }; f"
  hidden = "!f() { git show-ref | grep hidden; }; f"
  root = "rev-parse --show-toplevel"
  rebcont = "rebase --continue"
  rebbort = "rebase --abort"
