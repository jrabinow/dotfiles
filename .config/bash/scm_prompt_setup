#!/bin/bash

# BASH_MOD_DIR defined in ~/.bashrc

function ensure_source_present ()
{
    local SCM_PROMPT="${BASH_MOD_DIR}/source_control/scm-prompt"
    local GIT_PROMPT="${BASH_MOD_DIR}/source_control/git-prompt"
    local REMOTE_URL=https://raw.githubusercontent.com/git/git/master/contrib/completion/git-prompt.sh
    test -f "${SCM_PROMPT}" || test -f "${GIT_PROMPT}" || \
        curl $REMOTE_URL | sed -e 's/^__git_ps1 ()$/_dotfiles_scm_info ()/g' > "${GIT_PROMPT}"
}

# shellcheck disable=SC2120
function scmmode ()
{
    if [ $# -eq 1 ] && [ "${1}" == 'off' ]; then
        function _dotfiles_scm_info () { printf ""; }
    elif [ $# -eq 0 ] || { [ $# -eq 1 ] && [ "${1}" == 'on' ]; }; then
        if [ -f "$BASH_MOD_DIR/source_control/git-prompt" ]; then
            # shellcheck disable=SC2034
            GIT_PS1_SHOWDIRTYSTATE=1
            # shellcheck disable=SC2034
            GIT_PS1_SHOWSTASHSTATE=1
            # shellcheck disable=SC2034
            GIT_PS1_SHOWUPSTREAM="auto"
            source "$BASH_MOD_DIR/source_control/git-prompt"
        elif [ -f "$BASH_MOD_DIR/source_control/scm-prompt" ]; then
            source "$BASH_MOD_DIR/source_control/scm-prompt"
        else
            printf "ERROR: file %s/source_control/*-prompt NOT FOUND\n" "${BASH_MOD_DIR}" >&2
        fi
    else
        printf "Usage: scmmode [on|off]\n" >&2
    fi
}

ensure_source_present
scmmode
test -r "${BASH_MOD_DIR}/source_control/git-completion" && source "${BASH_MOD_DIR}/source_control/git-completion"
