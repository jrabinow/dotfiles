#!/usr/bin/env bash

# List of dirs to be added to PATH if they exist
PATH_DIRS_PREPEND="
    ${TESTBINARYDIR}
    $HOME/bin
    /opt/local/bin
    /opt/local/sbin
    /opt/local/libexec/gnubin
    /opt/local/lib/postgresql96/bin
"

PATH_DIRS_APPEND="
    /sbin
    /usr/sbin
"

# Prepend these directories if we're not root.
test $EUID != 0 &&
    PATH_DIRS_PREPEND="
    $PATH_DIRS_PREPEND
    "

GCLOUD_SDK_BASEDIR='/opt/local/google-cloud-sdk'
# The next line updates PATH for the Google Cloud SDK.
if [ -f "${GCLOUD_SDK_BASEDIR}/path.bash.inc" ]; then
    [[ ! $PATH =~ (^|:)"${GCLOUD_SDK_BASEDIR}"/bin(:|\$) ]] && \
        source "${GCLOUD_SDK_BASEDIR}/path.bash.inc"
fi

# must use intermediate variable as otherwise the contents of $PATH_DIRS_PREPEND
# are reversed. Alternative solution:
# http://stackoverflow.com/questions/1527049/join-elements-of-an-array
PREPEND=""
for i in ${PATH_DIRS_PREPEND}; do
    # we want to avoid duplicates
    # we remove the component from the PATH and add it back, because we want to
    # force prepending (deals with the case where the component is already added
    # to middle of PATH)
    PATH=$(sed -E "s#(^|:)$i(:*|$)#:#g" <<< "${PATH}")
    test -d "${i}" && PREPEND="$PREPEND:$i"
done

[ -n "${PREPEND}" ] && PATH=${PREPEND#:}:${PATH#:}
unset PREPEND
for i in ${PATH_DIRS_APPEND}; do
    # we do NOT force append entries to end of PATH; we only add if
    # PATH does not already contain this entry
    test -d "${i}" && [[ ! $PATH =~ (^|:)"${i}"(:|$) ]] && PATH=$PATH:$i
done
unset PATH_DIRS_APPEND
unset PATH_DIRS_PREPEND
