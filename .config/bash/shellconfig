#!/usr/bin/env bash

# vi keybindings
set -o vi
# report status of terminated bg jobs immediately
set -o notify
# bash does not overwrite an existing file with the >, >&, and <> redirection operators. Use >| and consorts instead
set -o noclobber

# append to the history file, don't overwrite it
shopt -s histappend
# real-time history update between bash instances, disabling for now
#PROMPT_COMMAND="history -a;history -n;$PROMPT_COMMAND"
# update the values of LINES and COLUMNS after each command if necessary
shopt -s checkwinsize
# save multiline history entries with '\n' instead of ;
#shopt -s lithist
# '<TAB><TAB>' at an empty prompt doesn't try to complete
shopt -s no_empty_cmd_completion
# extended glob pattern matching
shopt -s extglob
# Enable history expansion with space
# E.g. typing !!<space> will replace the !! with your last command
bind Space:magic-space
# Immediately add a trailing slash when autocompleting symlinks to directories, disabling for now
#bind "set mark-symlinked-directories on"

if [ "${BASH_VERSINFO[0]}" -ge 4 ]; then
    # perform shell expansion when completing with tab
    shopt -s direxpand
    # ** pattern represents all files in current directory and subdirectories
    shopt -s globstar
fi

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in
if [ -z "$debian_chroot" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# enable programmable completion features
if [ -f /etc/bash_completion ] && ! shopt -oq posix; then
    # shellcheck disable=SC1091
    . /etc/bash_completion
fi

# ixany: when the STOP character pressed (^s), allow resuming with any key combo instead of restricting to ^q
# clocal: disable modem control signals
# iutf8: assume chars are UTF8
# iexten enable non-posix-compliant chars
stty ixany clocal iexten
if [ $(uname) != OpenBSD ]; then
    stty iutf8
fi

# The next line enables shell command completion for gcloud.
if [ -f "${GCLOUD_SDK_BASEDIR}/completion.bash.inc" ]; then
    # shellcheck disable=SC1091
    source "${GCLOUD_SDK_BASEDIR}/completion.bash.inc"
fi
